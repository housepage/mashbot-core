<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.mashbot</groupId>
	<artifactId>server</artifactId>
	<packaging>war</packaging>
	<version>0.1</version>
	<name>mashbot</name>
	<repositories>
		<!-- for jaxb-impl -->
		<repository>
	      <id>gson</id>
	      <url>http://google-gson.googlecode.com/svn/mavenrepo</url>
	      <snapshots>
	        <enabled>true</enabled>
	      </snapshots>
	      <releases>
	        <enabled>true</enabled>
	      </releases>
	    </repository>
		<repository>
	      	<id>jboss</id>
	      	<url>http://repository.jboss.org/maven2</url>
	   	</repository>
	   	<repository>
	   		<id>Google OAuth</id>
	   		<url>http://oauth.googlecode.com/svn/code/maven</url>
	   	</repository>
	   	
		<repository>
				<id>com.springsource.repository.bundles.release</id>
				<name>EBR Spring Release Repository</name>
				<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
				<id>com.springsource.repository.bundles.external</id>
				<name>EBR External Release Repository</name>
				<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>	
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/1/</url>
			<layout>legacy</layout>
		</repository>
		<repository>
		    <id>maven2-repository.dev.java.net</id>
		    <name>Java.net Repository for Maven</name>
		    <url>http://download.java.net/maven/2/</url>
		    <layout>default</layout>
		</repository> 
        <repository>
	       	<id>twitter4j.org</id>
            <name>twitter4j.org Repository</name>
            <url>http://twitter4j.org/maven2</url>
            <releases>
            	<enabled>true</enabled>
            </releases>
            <snapshots>
            	<enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
	      <id>java-twitter-repository</id>
	      <url>http://java-twitter.googlecode.com/svn/repository/</url>
	      <name>java-twitter maven repository</name>
	    </repository>
	</repositories>
	<properties>
		<jersey.version>1.1.5.1</jersey.version>
		<cxf.version>2.2.7</cxf.version>
		<spring.version>2.5.6</spring.version>
		<org.springframework.version>3.0.0.RELEASE</org.springframework.version>
	</properties>
	<dependencies>
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>slf4j-simple</artifactId>
		  <version>1.5.8</version>
		</dependency>
		<!-- <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-maven-import</artifactId>
           <version>1.1.GA</version>
           <type>pom</type>
           <scope>import</scope>
       	</dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-server</artifactId>
		    <version>${jersey.version}</version>
		</dependency>
		<dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency> -->
		<!-- Depending on your requirements you may need more or fewer modules from cxf -->

		<!--
				Core utilities used by other modules.
				Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Expression Language (depends on core)
				Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Bean Factory and JavaBeans utilities (depends on core)
				Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Aspect Oriented Programming (AOP) Framework (depends on core, beans)
				Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Application Context (depends on core, expression, aop, beans)
				This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
				Define this if you need any of these integrations
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context.support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Transaction Management Abstraction (depends on core, beans, aop, context)
				Define this if you use Spring Transactions or DAO Exception Hierarchy
				(org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.transaction</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				JDBC Data Access Library (depends on core, beans, context, transaction)
				Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
				(depends on core, beans, context, transaction)
				Define this if you need ORM (org.springframework.orm.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
				(depends on core, beans, context)
				Define this if you need OXM (org.springframework.oxm.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Web app development utilities common across Servlet/Portlet environments (depends on core, beans, context)
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Spring MVC for Servlet Environments (depends on core, beans, context, web)
    Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web.servlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Spring MVC for Portlet Environments (depends on core, beans, context, web)
				Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web.portlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
				Support for testing Spring applications with tools such as JUnit and TestNG
				This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>		
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>org.springframework.security.core</artifactId>
			<version>3.0.2.RELEASE</version>
		</dependency>

        <dependency>
          <groupId>org.twitter4j</groupId>
          <artifactId>twitter4j-core</artifactId>
          <version>2.1.2</version>
        </dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-core</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-simple</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-databinding-aegis</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-local</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-jms</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-management</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-common-utilities</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.6</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.2</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
	      <groupId>com.google.code.facebookapi</groupId>
	      <artifactId>facebook-java-api</artifactId>
	      <version>2.0.5</version>
	    </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.6</version>
			<type>jar</type>
			<classifier>sources</classifier>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>com.aetrion.flickr</groupId>
            <artifactId>flickrapi</artifactId>
            <version>1.1</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.8</version>
				<configuration>
					<contextPath>mashbot</contextPath>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
